swagger: "2.0"
info:
  description: This is All Available APIs
  version: 1.0.0
  title: ACN API

host: 172.17.3.118:5000
schemes:
 - http

tags:
- name: Account
  description: Account APIs
- name: Community
  description: Community APIs

paths:
  /account/register:
    post:
      tags:
        - Account
      summary: Register new user
      description: Register a new member to the site
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Account Register
        schema:
          type: object
          required:
          - username
          - email
          - name
          - password
          properties:
            username:
              type: string
              example: acn_account
            email:
              type: string
              format: email
              example: your@email.com
            name:
              type: string
              example: the name
            password:
              type: string
              example: the password
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
        200-2:
          description: failed(username)
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: not available username
        200-3:
          description: failed(email-availability)
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: not available email
        200-4:
          description: failed(email-validation)
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid email


  /account/verify_code:
    post:
      tags:
        - Account
      summary: Verify Email
      description: The given email is verified with emailed code
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Verify Code
        schema:
          type: object
          required:
          - username
          - verification_code
          properties:
            username:
              type: string
              example: <username> or <email>
            verification_code:
              type: string
              example: "1234"
      responses:
        200-1:
          description: this token should sent later as "Authorization" key in headers
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              token:
                type: string
                example: <user_token>
        200-2:
          description: failed(code)
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid code
        200-3:
          description: failed(username)
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid username


  /account/resend_verification_code:
    post:
      tags:
        - Account
      summary: Send Verification Again
      description: "The verification code can be sent again in case of time limit of 
                    verification code is reached"
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Verify Code
        schema:
          type: object
          required:
          - username
          properties:
            username:
              type: string
              example: acn_account
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
        200-2:
          description: failed.
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid username
    

  /account/login:
    post:
      tags:
        - Account
      summary: Login User
      description: The user can login here
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Login
        schema:
          type: object
          required:
          - username
          - password
          properties:
            username:
              type: string
              example: <username> or <email>
            password:
              type: string
              example: the password
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              token:
                type: string
                example: <user_token>
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: not found

  /account/is_login:
    get:
      tags:
        - Account
      summary: check if user is login
      description: you can check user authentication here
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: Authorization or HTTP_AUTHORIZATION
        required: true
        type: string  
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: yes
        401-1:
          description: success
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Authentication credentials were not provided.
        401-2:
          description: success
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Invalid token.
      

  /account/update_user_info:
    post:
      tags:
        - Account
      summary: Update User Info
      description: The user can update the info here
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UpdateInfo
        schema:
          type: object
          properties:
            username:
              type: string
              example: acn_account
            name:
              type: string
              example: 'new name'
            avatar:
              example: this field is FILE (you can put 'delete' string for this field to delete user avatar)
            email:
              type: string
              format: email
              example: your@email.com
            age:
              type: string
              example: 20
            gender:
              type: string
              example: male or female
            old_password:
              type: string
              example: '1234'
            new_password:
              type: string
              example: 'new password'
            bio:
              type: string
              example: "I'm so good!"
      responses:
        200-1:
          description: success (the avatar field is a link)
          schema:
            type: object
            properties:
              id:
                type: int
                example: 2
              name:
                type: string
                example: name
              email:
                type: string
                format: email
                example: your@email.com
              age:
                type: int
                example: 20
              gender:
                type: string
                example: man
              avatar:
                type: url
                example: "/media/avatars/me.jpg"
              username:
                type: string
                example: acn_account
              bio:
                type: string
                example: "I'm so good!!"
        200-3:
          description: failed, the new username should be available
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: not available username
        200-4:
          description: failed, the new email should be available
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: not available email
        200-5:
          description: failed, the old password should be correct
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid old password
        200-6:
          description: failed, the new password shouldn't be empty or null
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid new password


  /account/myself_info:
    post:
      tags:
        - Account
      summary: Login User
      description: The user can login here
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 2
              name:
                type: string
                example: ali
              username:
                type: string
                example: mrm78
              email:
                type: string
                example: acn@gmail.com
              bio:
                type: string
                example: hi guys!
              pretty_gender:
                type: string
                example: male or female
              age:
                type: int
                example: 21
              avatar:
                type: string
                example: <url>
              




  /community/tags:
    get:
      tags:
        - Community
      summary: get all community tags
      description: get all community tags
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
      responses:
        200-1:
          description: success
          schema:
            type: array
            items:
              type: object
              example: {'id':1, 'name':'<tag>'}




  /community/create_community:
    post:
      tags:
        - Community
      summary: create a new community
      description: users cat create a new community
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - title
          - description
          - tags
          - image
          properties:
            title:
              type: string
              example: call of duty
            description:
              type: string
              example: community of gamers ;)
            tags:
              type: list
              example: [1,2,3]
            image:
              type: string
              example: <file>
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              id:
                type: int
                example: 5
        200-2:
          description: failed -> empty title
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: empty title
        200-3:
          description: failed -> invalid tag id (there is an invalid tag id in tags)
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid tag id




  /community/all_communities:
    get:
      tags:
        - Community
      summary: all communities
      description: return all communities
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
      responses:
        200-1:
          description: success
          schema:
            type: array
            items:
              type: object
              example: {'id':1, 'title':'...', 'description':'...', 'number_of_participants':5, 'creation_date':'2021-04-29T05:43:32.987417+04:30', 'image':'<url>', 'tags_info':[{'id':1, 'name':'gmae'}, ...], 'creator_info':{'username':'mrm78','avatar':'<url>'}, 'is_joined':true, 'is_admin':false}


  /community/my_communities:
    get:
      tags:
        - Community
      summary: all communities
      description: return joined and created communities
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
      responses:
        200-1:
          description: success
          schema:
            type: array
            items:
              type: object
              example: {'id':1, 'title':'...', 'description':'...', 'number_of_participants':5, 'creation_date':'2021-04-29T05:43:32.987417+04:30', 'image':'<url>', 'tags_info':[{'id':1, 'name':'gmae'}, ...], 'creator_info':{'username':'mrm78','avatar':'<url>'}, 'is_joined':true, 'is_admin':false}


  /community/community_info:
    get:
      tags:
        - Community
      summary: get community info
      description: return community info by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - id
          properties:
            id:
              type: integer
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: array
            example: {'id':1, 'title':'...', 'description':'...', 'number_of_participants':5, 'creation_date':'2021-04-29T05:43:32.987417+04:30', 'image':'<url>', 'tags_info':[{'id':1, 'name':'gmae'}, ...], 'creator_info':{'username':'mrm78','avatar':'<url>'}, 'is_joined':true, 'is_admin':false}


  /community/create_event:
    post:
      tags:
        - Community
      summary: create a new event
      description: users cat create a new event
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - title
          - description
          - community_id
          - image
          - begin_time
          properties:
            title:
              type: string
              example: call of duty tricks
            description:
              type: string
              example: all tricks of call of duty
            community_id:
              type: integer
              example: 2
            image:
              type: string
              example: <FILE>
            begin_time:
              type: string
              example: "2021-05-10T00:33:41.440370+04:30"
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              id:
                type: int
                example: 5
        200-2:
          description: failed -> empty title
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: empty title
        200-3:
          description: failed -> invalid community_id (
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id
        200-4:
          description: failed -> permission denied
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: permission denied
        200-5:
          description: failed -> invalid begin time format
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid begin time format

  /community/event_info:
    get:
      tags:
        - Community
      summary: get event info
      description: return event info by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: event info
        schema:
          type: object
          required:
          - id
          properties:
            event_id:
              type: integer
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: array
            example: {'id':1, 'title':'...', 'description':'...', 'number_of_participants':5, 'image':<url>, 'community':5, 'creation_date':'2021-04-29T05:43:32.987417+04:30', 'begin_time': '2021-05-16T16:13:43.901460+04:30', 'creator_info':{'username':'mrm78','avatar':'<url>'}}



  /community/community_events:
    get:
      tags:
        - Community
      summary: events of a community
      description: get id of a community and return events
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - community_id
          properties:
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: array
            items:
              type: object
              example: {'id':1, 'title':'...', 'description':'...', 'community':1, 'image':<url> 'creation_date':'2021-04-29T05:43:32.987417+04:30', 'begin_time':'2021-04-29T05:43:32.987417+04:30', 'creator_info':{'username':'mrm78','avatar':'<url>'}}
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id

  /community/community_participants:
    get:
      tags:
        - Community
      summary: participants of a community (also creator of community)
      description: get id of a community and return participants
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - community_id
          properties:
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: array
            items:
              type: object
              example: {'id':1, 'name':'mohamad', 'username':'mrm78', 'bio':'...', 'avatar':'<url>'}
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id
  
  /community/join_community:
    post:
      tags:
        - Community
      summary: join a community
      description: get id of a community and join
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - community_id
          properties:
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id
        200-3:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: already a member


  /community/leave_community:
    post:
      tags:
        - Community
      summary: leave a community
      description: get id of a community and leave
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - community_id
          properties:
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id
        200-3:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: not already a member


  /community/join_event:
    post:
      tags:
        - Community
      summary: join a event
      description: get id of a event and join
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - event_id
          properties:
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid event id
        200-3:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: already a member
        200-4:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: permission denied

  /community/create_post:
    post:
      tags:
        - Community
      summary: create a new post
      description: users can create a new post
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - caption
          - image
          - community_id
          properties:
            caption:
              type: string
              example: call of duty
            image:
              type: string
              example: FILE
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              id:
                type: int
                example: 5
        200-2:
          description: failed -> image
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: no image
        200-3:
          description: failed -> invalid community id
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id
        200-4:
          description: failed -> permission denied
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: permission denied

  /community/community_posts:
    get:
      tags:
        - Community
      summary: a
      description: a
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: community info
        schema:
          type: object
          required:
          - community_id
          properties:
            community_id:
              type: string
              example: 5
      responses:
        200-1:
          description: success
          schema:
            type: array
            items:
              type: object
              example: {'id':1, 'caption':'...', 'image':'<url>', 'date':'...','creator_info':{'username':'mrm78','avatar':'<url>'}}
        200-2:
          description: failed
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              error:
                type: string
                example: invalid community id
  