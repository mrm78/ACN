version: '3.3'
services:
  db:
    image: postgres
    container_name: db
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}

  web:
    build: 
      context: .
      dockerfile: ./docker/back/Dockerfile
    container_name: backend_app
    restart: unless-stopped
    env_file:
      - ./docker/back/.env
    volumes: 
      - ./ACN_backend_service:/app
    ports:
      - '${BACKEND_PORT}:8000'
    entrypoint: /entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db

  frontend:
    build: 
      context: ./ACN_frontend_service
      dockerfile: ../docker/front/Dockerfile.dev
    container_name: frontend
    env_file:
      - ./docker/front/.env
    volumes: 
      - ./ACN_frontend_service:/app
      - /app/node_modules
    ports:
      - '${FRONTEND_PORT}:3000'
    stdin_open: true

  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger
    ports:
      - "8080:8080"
    volumes:
      - ./ACN_backend_service:/usr/share/nginx/html/swagger
    environment:
      API_URL: swagger/swagger.yml
